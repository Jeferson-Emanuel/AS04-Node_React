{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\_UPE 2020.2(2021)\\\\ISI\\\\AS04-Node_React\\\\client\\\\src\\\\Components\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalJanela({\n  closeModal,\n  id\n}) {\n  _s();\n\n  const [idOld, setIDOld] = useState('');\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [naturalidade, setNaturalidade] = useState('');\n  const [disciplina, setDisciplina] = useState('');\n  const [alunoBase, setAlunoBase] = useState({});\n  const [listaDisciplinas, setListaDisciplinas] = useState([]);\n  useEffect(() => {\n    Axios.get('http://localhost:3001/Modal/api/get').then(response => {\n      setListaDisciplinas(response.data);\n    });\n    Axios.get(`http://localhost:3001/Modal/api/get/${id}`).then(r => {\n      setAlunoBase(r.data[0]);\n      const dados = r.data[0];\n      console.log(dados);\n      setIDOld(dados.id);\n      setNome(dados.nome);\n      setEmail(dados.email);\n      setNaturalidade(dados.naturalidade);\n    });\n  }, []); //Função para atualizar aluno\n\n  const atualizaAluno = () => {\n    Axios.put('http://localhost:3001/Modal/api/update', {\n      id: idOld,\n      nome: nome,\n      email: email,\n      naturalidade: naturalidade,\n      disciplina: disciplina\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalBackground\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => closeModal(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        /* key={id} */\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"id\",\n          value: idOld\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nome\",\n          value: nome,\n          onChange: n => {\n            setNome(n.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: email,\n          onChange: e => {\n            setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Naturalidade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Naturalidade\",\n          value: naturalidade,\n          onChange: b => {\n            setNaturalidade(b.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Disciplina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          name: \"selecao\",\n          onChange: d => {\n            setDisciplina(d.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Selecione disciplina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), listaDisciplinas.map(val => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: val.id,\n            children: val.disciplina\n          }, val.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: atualizaAluno,\n          children: \"Atualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => closeModal(false),\n          children: \"Cancela\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModalJanela, \"1EARR+gSYL0gToF9LUHu5Q0pFJI=\");\n\n_c = ModalJanela;\nexport default ModalJanela;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalJanela\");","map":{"version":3,"sources":["E:/Documents/_UPE 2020.2(2021)/ISI/AS04-Node_React/client/src/Components/Modal.js"],"names":["React","useState","useEffect","Axios","Modal","ModalJanela","closeModal","id","idOld","setIDOld","nome","setNome","email","setEmail","naturalidade","setNaturalidade","disciplina","setDisciplina","alunoBase","setAlunoBase","listaDisciplinas","setListaDisciplinas","get","then","response","data","r","dados","console","log","atualizaAluno","put","n","target","value","e","b","d","map","val"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport Modal from 'react-modal';\r\n\r\nfunction ModalJanela({closeModal, id}) {\r\n\r\n  const [idOld, setIDOld] = useState ('');\r\n  const [nome, setNome] = useState ('');\r\n  const [email, setEmail] = useState ('');\r\n  const [naturalidade, setNaturalidade] = useState ('');\r\n  const [disciplina, setDisciplina] = useState ('');\r\n\r\n  const [alunoBase, setAlunoBase] = useState ({});\r\n  const [listaDisciplinas, setListaDisciplinas] = useState ([]);\r\n\r\n  useEffect (() => {\r\n    Axios.get ('http://localhost:3001/Modal/api/get').then (response => {\r\n      setListaDisciplinas (response.data);\r\n    });\r\n    Axios.get (`http://localhost:3001/Modal/api/get/${id}`).then (r => {\r\n      setAlunoBase (r.data[0]);\r\n      const dados = r.data[0];\r\n      console.log(dados);\r\n      setIDOld (dados.id);\r\n      setNome (dados.nome);\r\n      setEmail (dados.email);\r\n      setNaturalidade (dados.naturalidade);   \r\n    });      \r\n  }, []);\r\n\r\n  //Função para atualizar aluno\r\n  const atualizaAluno = () => {\r\n    Axios.put ('http://localhost:3001/Modal/api/update', {\r\n      id: idOld,\r\n      nome: nome,\r\n      email: email,\r\n      naturalidade: naturalidade,\r\n      disciplina: disciplina,\r\n    });\r\n  };\r\n  return (\r\n    <Modal isOpen={closeModal}>\r\n\r\n      <div className=\"modalBackground\">\r\n\r\n        <button onClick={() => closeModal (false)}>X</button>\r\n\r\n        <div /* key={id} */ className=\"form\">\r\n\r\n          <input type=\"text\" name=\"id\" value={idOld} />\r\n\r\n          <label>Nome</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nome\"\r\n            value={nome}\r\n            onChange={n => {\r\n              setNome (n.target.value);\r\n            }}\r\n          />\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => {\r\n              setEmail (e.target.value);\r\n            }}\r\n          />\r\n          <label>Naturalidade</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"Naturalidade\"\r\n            value={naturalidade}\r\n            onChange={b => {\r\n              setNaturalidade (b.target.value);\r\n            }}\r\n          />\r\n          <label>Disciplina</label>\r\n          <select\r\n            type=\"text\"\r\n            name=\"selecao\"\r\n            onChange={d => {\r\n              setDisciplina (d.target.value);\r\n            }}\r\n          >\r\n            <option value=\"0\">Selecione disciplina</option>\r\n            {listaDisciplinas.map (val => (\r\n              <option key={val.id} value={val.id}>{val.disciplina}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <button onClick={atualizaAluno}>Atualizar</button>\r\n          <button onClick={() => closeModal (false)}>Cancela</button>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalJanela;\r\n"]},"metadata":{},"sourceType":"module"}